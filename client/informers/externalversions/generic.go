/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package externalversions

import (
	"fmt"

	v1alpha1 "kubeform.dev/provider-ibm-api/apis/api/v1alpha1"
	appv1alpha1 "kubeform.dev/provider-ibm-api/apis/app/v1alpha1"
	cdnv1alpha1 "kubeform.dev/provider-ibm-api/apis/cdn/v1alpha1"
	certificatev1alpha1 "kubeform.dev/provider-ibm-api/apis/certificate/v1alpha1"
	cisv1alpha1 "kubeform.dev/provider-ibm-api/apis/cis/v1alpha1"
	cmv1alpha1 "kubeform.dev/provider-ibm-api/apis/cm/v1alpha1"
	computev1alpha1 "kubeform.dev/provider-ibm-api/apis/compute/v1alpha1"
	containerv1alpha1 "kubeform.dev/provider-ibm-api/apis/container/v1alpha1"
	cosv1alpha1 "kubeform.dev/provider-ibm-api/apis/cos/v1alpha1"
	crv1alpha1 "kubeform.dev/provider-ibm-api/apis/cr/v1alpha1"
	databasev1alpha1 "kubeform.dev/provider-ibm-api/apis/database/v1alpha1"
	dlv1alpha1 "kubeform.dev/provider-ibm-api/apis/dl/v1alpha1"
	dnsv1alpha1 "kubeform.dev/provider-ibm-api/apis/dns/v1alpha1"
	enterprisev1alpha1 "kubeform.dev/provider-ibm-api/apis/enterprise/v1alpha1"
	eventv1alpha1 "kubeform.dev/provider-ibm-api/apis/event/v1alpha1"
	firewallv1alpha1 "kubeform.dev/provider-ibm-api/apis/firewall/v1alpha1"
	functionv1alpha1 "kubeform.dev/provider-ibm-api/apis/function/v1alpha1"
	hardwarev1alpha1 "kubeform.dev/provider-ibm-api/apis/hardware/v1alpha1"
	hpcsv1alpha1 "kubeform.dev/provider-ibm-api/apis/hpcs/v1alpha1"
	iamv1alpha1 "kubeform.dev/provider-ibm-api/apis/iam/v1alpha1"
	ipsecv1alpha1 "kubeform.dev/provider-ibm-api/apis/ipsec/v1alpha1"
	isv1alpha1 "kubeform.dev/provider-ibm-api/apis/is/v1alpha1"
	kmsv1alpha1 "kubeform.dev/provider-ibm-api/apis/kms/v1alpha1"
	kpv1alpha1 "kubeform.dev/provider-ibm-api/apis/kp/v1alpha1"
	lbv1alpha1 "kubeform.dev/provider-ibm-api/apis/lb/v1alpha1"
	lbaasv1alpha1 "kubeform.dev/provider-ibm-api/apis/lbaas/v1alpha1"
	multiv1alpha1 "kubeform.dev/provider-ibm-api/apis/multi/v1alpha1"
	networkv1alpha1 "kubeform.dev/provider-ibm-api/apis/network/v1alpha1"
	obv1alpha1 "kubeform.dev/provider-ibm-api/apis/ob/v1alpha1"
	objectv1alpha1 "kubeform.dev/provider-ibm-api/apis/object/v1alpha1"
	orgv1alpha1 "kubeform.dev/provider-ibm-api/apis/org/v1alpha1"
	piv1alpha1 "kubeform.dev/provider-ibm-api/apis/pi/v1alpha1"
	pnv1alpha1 "kubeform.dev/provider-ibm-api/apis/pn/v1alpha1"
	resourcev1alpha1 "kubeform.dev/provider-ibm-api/apis/resource/v1alpha1"
	satellitev1alpha1 "kubeform.dev/provider-ibm-api/apis/satellite/v1alpha1"
	schematicsv1alpha1 "kubeform.dev/provider-ibm-api/apis/schematics/v1alpha1"
	securityv1alpha1 "kubeform.dev/provider-ibm-api/apis/security/v1alpha1"
	servicev1alpha1 "kubeform.dev/provider-ibm-api/apis/service/v1alpha1"
	spacev1alpha1 "kubeform.dev/provider-ibm-api/apis/space/v1alpha1"
	sslv1alpha1 "kubeform.dev/provider-ibm-api/apis/ssl/v1alpha1"
	storagev1alpha1 "kubeform.dev/provider-ibm-api/apis/storage/v1alpha1"
	subnetv1alpha1 "kubeform.dev/provider-ibm-api/apis/subnet/v1alpha1"
	tgv1alpha1 "kubeform.dev/provider-ibm-api/apis/tg/v1alpha1"

	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cache "k8s.io/client-go/tools/cache"
)

// GenericInformer is type of SharedIndexInformer which will locate and delegate to other
// sharedInformers based on type
type GenericInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() cache.GenericLister
}

type genericInformer struct {
	informer cache.SharedIndexInformer
	resource schema.GroupResource
}

// Informer returns the SharedIndexInformer.
func (f *genericInformer) Informer() cache.SharedIndexInformer {
	return f.informer
}

// Lister returns the GenericLister.
func (f *genericInformer) Lister() cache.GenericLister {
	return cache.NewGenericLister(f.Informer().GetIndexer(), f.resource)
}

// ForResource gives generic access to a shared informer of the matching type
// TODO extend this to unknown resources with a client pool
func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {
	switch resource {
	// Group=api.ibm.kubeform.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithResource("gatewayendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Api().V1alpha1().GatewayEndpoints().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("gatewayendpointsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Api().V1alpha1().GatewayEndpointSubscriptions().Informer()}, nil

		// Group=app.ibm.kubeform.com, Version=v1alpha1
	case appv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().Apps().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("configenvironments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ConfigEnvironments().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("configfeatures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ConfigFeatures().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("domainprivates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().DomainPrivates().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("domainshareds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().DomainShareds().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().Routes().Informer()}, nil

		// Group=cdn.ibm.kubeform.com, Version=v1alpha1
	case cdnv1alpha1.SchemeGroupVersion.WithResource("cdns"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().Cdns().Informer()}, nil

		// Group=certificate.ibm.kubeform.com, Version=v1alpha1
	case certificatev1alpha1.SchemeGroupVersion.WithResource("managerimports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Certificate().V1alpha1().ManagerImports().Informer()}, nil
	case certificatev1alpha1.SchemeGroupVersion.WithResource("managerorders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Certificate().V1alpha1().ManagerOrders().Informer()}, nil

		// Group=cis.ibm.kubeform.com, Version=v1alpha1
	case cisv1alpha1.SchemeGroupVersion.WithResource("cachesettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().CacheSettingses().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("certificateorders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().CertificateOrders().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("certificateuploads"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().CertificateUploads().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("cises"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().Cises().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("custompages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().CustomPages().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("dnsrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().DnsRecords().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("dnsrecordsimports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().DnsRecordsImports().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().Domains().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("domainsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().DomainSettingses().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("edgefunctionsactions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().EdgeFunctionsActions().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("edgefunctionstriggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().EdgeFunctionsTriggers().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("filters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().Filters().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("firewalls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().Firewalls().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("globalloadbalancers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().GlobalLoadBalancers().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("healthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().Healthchecks().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("originpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().OriginPools().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("pagerules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().PageRules().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("rangeapps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().RangeApps().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("ratelimits"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().RateLimits().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("routings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().Routings().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("tlssettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().TlsSettingses().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("wafgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().WafGroups().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("wafpackages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().WafPackages().Informer()}, nil
	case cisv1alpha1.SchemeGroupVersion.WithResource("wafrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cis().V1alpha1().WafRules().Informer()}, nil

		// Group=cm.ibm.kubeform.com, Version=v1alpha1
	case cmv1alpha1.SchemeGroupVersion.WithResource("catalogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cm().V1alpha1().Catalogs().Informer()}, nil
	case cmv1alpha1.SchemeGroupVersion.WithResource("offerings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cm().V1alpha1().Offerings().Informer()}, nil
	case cmv1alpha1.SchemeGroupVersion.WithResource("offeringinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cm().V1alpha1().OfferingInstances().Informer()}, nil
	case cmv1alpha1.SchemeGroupVersion.WithResource("versions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cm().V1alpha1().Versions().Informer()}, nil

		// Group=compute.ibm.kubeform.com, Version=v1alpha1
	case computev1alpha1.SchemeGroupVersion.WithResource("autoscalegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().AutoscaleGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("autoscalepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().AutoscalePolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("baremetals"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().BareMetals().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("dedicatedhosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().DedicatedHosts().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("monitors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Monitors().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("placementgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().PlacementGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("provisioninghooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ProvisioningHooks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("sshkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SshKeys().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("sslcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SslCertificates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Users().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("vminstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().VmInstances().Informer()}, nil

		// Group=container.ibm.kubeform.com, Version=v1alpha1
	case containerv1alpha1.SchemeGroupVersion.WithResource("addonses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Addonses().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("albs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Albs().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("albcerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().AlbCerts().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("apikeyresets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().ApiKeyResets().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("bindservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().BindServices().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Clusters().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("clusterfeatures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().ClusterFeatures().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("vpcalbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().VpcAlbs().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("vpcclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().VpcClusters().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("vpcworkerpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().VpcWorkerPools().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("workerpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().WorkerPools().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("workerpoolzoneattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().WorkerPoolZoneAttachments().Informer()}, nil

		// Group=cos.ibm.kubeform.com, Version=v1alpha1
	case cosv1alpha1.SchemeGroupVersion.WithResource("buckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cos().V1alpha1().Buckets().Informer()}, nil
	case cosv1alpha1.SchemeGroupVersion.WithResource("bucketobjects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cos().V1alpha1().BucketObjects().Informer()}, nil

		// Group=cr.ibm.kubeform.com, Version=v1alpha1
	case crv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().Namespaces().Informer()}, nil
	case crv1alpha1.SchemeGroupVersion.WithResource("retentionpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cr().V1alpha1().RetentionPolicies().Informer()}, nil

		// Group=database.ibm.kubeform.com, Version=v1alpha1
	case databasev1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Database().V1alpha1().Databases().Informer()}, nil

		// Group=dl.ibm.kubeform.com, Version=v1alpha1
	case dlv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dl().V1alpha1().Gateways().Informer()}, nil
	case dlv1alpha1.SchemeGroupVersion.WithResource("providergateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dl().V1alpha1().ProviderGateways().Informer()}, nil
	case dlv1alpha1.SchemeGroupVersion.WithResource("virtualconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dl().V1alpha1().VirtualConnections().Informer()}, nil

		// Group=dns.ibm.kubeform.com, Version=v1alpha1
	case dnsv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Domains().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("domainregistrationnameserverses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().DomainRegistrationNameserverses().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("glbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Glbs().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("glbmonitors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().GlbMonitors().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("glbpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().GlbPools().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("permittednetworks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().PermittedNetworks().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("records"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Records().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("resourcerecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().ResourceRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("reverserecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().ReverseRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("secondaries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Secondaries().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("zones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Zones().Informer()}, nil

		// Group=enterprise.ibm.kubeform.com, Version=v1alpha1
	case enterprisev1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Enterprise().V1alpha1().Accounts().Informer()}, nil
	case enterprisev1alpha1.SchemeGroupVersion.WithResource("accountgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Enterprise().V1alpha1().AccountGroups().Informer()}, nil
	case enterprisev1alpha1.SchemeGroupVersion.WithResource("enterprises"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Enterprise().V1alpha1().Enterprises().Informer()}, nil

		// Group=event.ibm.kubeform.com, Version=v1alpha1
	case eventv1alpha1.SchemeGroupVersion.WithResource("streamstopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Event().V1alpha1().StreamsTopics().Informer()}, nil

		// Group=firewall.ibm.kubeform.com, Version=v1alpha1
	case firewallv1alpha1.SchemeGroupVersion.WithResource("firewalls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().Firewalls().Informer()}, nil
	case firewallv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().Policies().Informer()}, nil

		// Group=function.ibm.kubeform.com, Version=v1alpha1
	case functionv1alpha1.SchemeGroupVersion.WithResource("actions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().Actions().Informer()}, nil
	case functionv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().Namespaces().Informer()}, nil
	case functionv1alpha1.SchemeGroupVersion.WithResource("packages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().Packages().Informer()}, nil
	case functionv1alpha1.SchemeGroupVersion.WithResource("rules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().Rules().Informer()}, nil
	case functionv1alpha1.SchemeGroupVersion.WithResource("triggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().Triggers().Informer()}, nil

		// Group=hardware.ibm.kubeform.com, Version=v1alpha1
	case hardwarev1alpha1.SchemeGroupVersion.WithResource("firewallshareds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hardware().V1alpha1().FirewallShareds().Informer()}, nil

		// Group=hpcs.ibm.kubeform.com, Version=v1alpha1
	case hpcsv1alpha1.SchemeGroupVersion.WithResource("hpcses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hpcs().V1alpha1().Hpcses().Informer()}, nil

		// Group=iam.ibm.kubeform.com, Version=v1alpha1
	case iamv1alpha1.SchemeGroupVersion.WithResource("accessgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccessGroups().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("accessgroupdynamicrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccessGroupDynamicRules().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("accessgroupmemberses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccessGroupMemberses().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("accessgrouppolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccessGroupPolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("accountsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AccountSettingses().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("apikeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().ApiKeys().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("authorizationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AuthorizationPolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("authorizationpolicydetaches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().AuthorizationPolicyDetaches().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("customroles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().CustomRoles().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("serviceapikeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().ServiceAPIKeys().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("serviceids"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().ServiceIDs().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("servicepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().ServicePolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("userinvites"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserInvites().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("userpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserPolicies().Informer()}, nil
	case iamv1alpha1.SchemeGroupVersion.WithResource("usersettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iam().V1alpha1().UserSettingses().Informer()}, nil

		// Group=ipsec.ibm.kubeform.com, Version=v1alpha1
	case ipsecv1alpha1.SchemeGroupVersion.WithResource("vpns"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ipsec().V1alpha1().Vpns().Informer()}, nil

		// Group=is.ibm.kubeform.com, Version=v1alpha1
	case isv1alpha1.SchemeGroupVersion.WithResource("dedicatedhosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().DedicatedHosts().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("dedicatedhostdiskmanagements"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().DedicatedHostDiskManagements().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("dedicatedhostgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().DedicatedHostGroups().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("floatingips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().FloatingIPs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("flowlogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().FlowLogs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("ikepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().IkePolicies().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Images().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Instances().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancediskmanagements"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceDiskManagements().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceGroups().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancegroupmanagers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceGroupManagers().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancegroupmanageractions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceGroupManagerActions().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancegroupmanagerpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceGroupManagerPolicies().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancegroupmemberships"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceGroupMemberships().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancetemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceTemplates().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("instancevolumeattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().InstanceVolumeAttachments().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("ipsecpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().IpsecPolicies().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("lbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Lbs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("lblisteners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().LbListeners().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("lblistenerpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().LbListenerPolicies().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("lblistenerpolicyrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().LbListenerPolicyRules().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("lbpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().LbPools().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("lbpoolmembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().LbPoolMembers().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("networkacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().NetworkACLs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("networkaclrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().NetworkACLRules().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("publicgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().PublicGateways().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SecurityGroups().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("securitygroupnetworkinterfaceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SecurityGroupNetworkInterfaceAttachments().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("securitygrouprules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SecurityGroupRules().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("securitygrouptargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SecurityGroupTargets().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Snapshots().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("sshkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SshKeys().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("subnets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Subnets().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("subnetnetworkaclattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SubnetNetworkACLAttachments().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("subnetreservedips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().SubnetReservedIPs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("virtualendpointgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VirtualEndpointGateways().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("virtualendpointgatewayips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VirtualEndpointGatewayIPs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("volumes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Volumes().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpcs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().Vpcs().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpcaddressprefixes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VpcAddressPrefixes().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpcroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VpcRoutes().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpcroutingtables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VpcRoutingTables().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpcroutingtableroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VpcRoutingTableRoutes().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpngateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VpnGateways().Informer()}, nil
	case isv1alpha1.SchemeGroupVersion.WithResource("vpngatewayconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Is().V1alpha1().VpnGatewayConnections().Informer()}, nil

		// Group=kms.ibm.kubeform.com, Version=v1alpha1
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().Keys().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyaliases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyAliases().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyringses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyRingses().Informer()}, nil

		// Group=kp.ibm.kubeform.com, Version=v1alpha1
	case kpv1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kp().V1alpha1().Keys().Informer()}, nil

		// Group=lb.ibm.kubeform.com, Version=v1alpha1
	case lbv1alpha1.SchemeGroupVersion.WithResource("lbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Lbs().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Services().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("servicegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().ServiceGroups().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("vpxes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Vpxes().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("vpxhas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().VpxHas().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("vpxservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().VpxServices().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("vpxvips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().VpxVips().Informer()}, nil

		// Group=lbaas.ibm.kubeform.com, Version=v1alpha1
	case lbaasv1alpha1.SchemeGroupVersion.WithResource("healthmonitors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lbaas().V1alpha1().HealthMonitors().Informer()}, nil
	case lbaasv1alpha1.SchemeGroupVersion.WithResource("lbaases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lbaas().V1alpha1().Lbaases().Informer()}, nil
	case lbaasv1alpha1.SchemeGroupVersion.WithResource("serverinstanceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lbaas().V1alpha1().ServerInstanceAttachments().Informer()}, nil

		// Group=multi.ibm.kubeform.com, Version=v1alpha1
	case multiv1alpha1.SchemeGroupVersion.WithResource("vlanfirewalls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Multi().V1alpha1().VlanFirewalls().Informer()}, nil

		// Group=network.ibm.kubeform.com, Version=v1alpha1
	case networkv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Gateways().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("gatewayvlanassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().GatewayVLANAssociations().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfacesgattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceSgAttachments().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("publicips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().PublicIPs().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("vlans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Vlans().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("vlanspannings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().VlanSpannings().Informer()}, nil

		// Group=ob.ibm.kubeform.com, Version=v1alpha1
	case obv1alpha1.SchemeGroupVersion.WithResource("loggings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ob().V1alpha1().Loggings().Informer()}, nil
	case obv1alpha1.SchemeGroupVersion.WithResource("monitorings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ob().V1alpha1().Monitorings().Informer()}, nil

		// Group=object.ibm.kubeform.com, Version=v1alpha1
	case objectv1alpha1.SchemeGroupVersion.WithResource("storageaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Object().V1alpha1().StorageAccounts().Informer()}, nil

		// Group=org.ibm.kubeform.com, Version=v1alpha1
	case orgv1alpha1.SchemeGroupVersion.WithResource("orgs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Org().V1alpha1().Orgs().Informer()}, nil

		// Group=pi.ibm.kubeform.com, Version=v1alpha1
	case piv1alpha1.SchemeGroupVersion.WithResource("captures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Captures().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Images().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Instances().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Keys().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("networks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Networks().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("networkports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().NetworkPorts().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("networkportattaches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().NetworkPortAttaches().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("operationses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Operationses().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Snapshots().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("volumes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().Volumes().Informer()}, nil
	case piv1alpha1.SchemeGroupVersion.WithResource("volumeattaches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pi().V1alpha1().VolumeAttaches().Informer()}, nil

		// Group=pn.ibm.kubeform.com, Version=v1alpha1
	case pnv1alpha1.SchemeGroupVersion.WithResource("applicationchromes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pn().V1alpha1().ApplicationChromes().Informer()}, nil

		// Group=resource.ibm.kubeform.com, Version=v1alpha1
	case resourcev1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().Groups().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().Instances().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().Keys().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("tags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().Tags().Informer()}, nil

		// Group=satellite.ibm.kubeform.com, Version=v1alpha1
	case satellitev1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Satellite().V1alpha1().Clusters().Informer()}, nil
	case satellitev1alpha1.SchemeGroupVersion.WithResource("clusterworkerpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Satellite().V1alpha1().ClusterWorkerPools().Informer()}, nil
	case satellitev1alpha1.SchemeGroupVersion.WithResource("hosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Satellite().V1alpha1().Hosts().Informer()}, nil
	case satellitev1alpha1.SchemeGroupVersion.WithResource("locations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Satellite().V1alpha1().Locations().Informer()}, nil

		// Group=schematics.ibm.kubeform.com, Version=v1alpha1
	case schematicsv1alpha1.SchemeGroupVersion.WithResource("actions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schematics().V1alpha1().Actions().Informer()}, nil
	case schematicsv1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schematics().V1alpha1().Jobs().Informer()}, nil
	case schematicsv1alpha1.SchemeGroupVersion.WithResource("workspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schematics().V1alpha1().Workspaces().Informer()}, nil

		// Group=security.ibm.kubeform.com, Version=v1alpha1
	case securityv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().Groups().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("grouprules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().GroupRules().Informer()}, nil

		// Group=service.ibm.kubeform.com, Version=v1alpha1
	case servicev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().Instances().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().Keys().Informer()}, nil

		// Group=space.ibm.kubeform.com, Version=v1alpha1
	case spacev1alpha1.SchemeGroupVersion.WithResource("spaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Space().V1alpha1().Spaces().Informer()}, nil

		// Group=ssl.ibm.kubeform.com, Version=v1alpha1
	case sslv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssl().V1alpha1().Certificates().Informer()}, nil

		// Group=storage.ibm.kubeform.com, Version=v1alpha1
	case storagev1alpha1.SchemeGroupVersion.WithResource("blocks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Blocks().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("evaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Evaults().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("files"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Files().Informer()}, nil

		// Group=subnet.ibm.kubeform.com, Version=v1alpha1
	case subnetv1alpha1.SchemeGroupVersion.WithResource("subnets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().Subnets().Informer()}, nil

		// Group=tg.ibm.kubeform.com, Version=v1alpha1
	case tgv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tg().V1alpha1().Connections().Informer()}, nil
	case tgv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tg().V1alpha1().Gateways().Informer()}, nil

	}

	return nil, fmt.Errorf("no informer found for %v", resource)
}
