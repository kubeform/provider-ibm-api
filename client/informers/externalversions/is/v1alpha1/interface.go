/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "kubeform.dev/provider-ibm-api/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// DedicatedHosts returns a DedicatedHostInformer.
	DedicatedHosts() DedicatedHostInformer
	// DedicatedHostDiskManagements returns a DedicatedHostDiskManagementInformer.
	DedicatedHostDiskManagements() DedicatedHostDiskManagementInformer
	// DedicatedHostGroups returns a DedicatedHostGroupInformer.
	DedicatedHostGroups() DedicatedHostGroupInformer
	// FloatingIPs returns a FloatingIPInformer.
	FloatingIPs() FloatingIPInformer
	// FlowLogs returns a FlowLogInformer.
	FlowLogs() FlowLogInformer
	// IkePolicies returns a IkePolicyInformer.
	IkePolicies() IkePolicyInformer
	// Images returns a ImageInformer.
	Images() ImageInformer
	// Instances returns a InstanceInformer.
	Instances() InstanceInformer
	// InstanceDiskManagements returns a InstanceDiskManagementInformer.
	InstanceDiskManagements() InstanceDiskManagementInformer
	// InstanceGroups returns a InstanceGroupInformer.
	InstanceGroups() InstanceGroupInformer
	// InstanceGroupManagers returns a InstanceGroupManagerInformer.
	InstanceGroupManagers() InstanceGroupManagerInformer
	// InstanceGroupManagerActions returns a InstanceGroupManagerActionInformer.
	InstanceGroupManagerActions() InstanceGroupManagerActionInformer
	// InstanceGroupManagerPolicies returns a InstanceGroupManagerPolicyInformer.
	InstanceGroupManagerPolicies() InstanceGroupManagerPolicyInformer
	// InstanceGroupMemberships returns a InstanceGroupMembershipInformer.
	InstanceGroupMemberships() InstanceGroupMembershipInformer
	// InstanceTemplates returns a InstanceTemplateInformer.
	InstanceTemplates() InstanceTemplateInformer
	// InstanceVolumeAttachments returns a InstanceVolumeAttachmentInformer.
	InstanceVolumeAttachments() InstanceVolumeAttachmentInformer
	// IpsecPolicies returns a IpsecPolicyInformer.
	IpsecPolicies() IpsecPolicyInformer
	// Lbs returns a LbInformer.
	Lbs() LbInformer
	// LbListeners returns a LbListenerInformer.
	LbListeners() LbListenerInformer
	// LbListenerPolicies returns a LbListenerPolicyInformer.
	LbListenerPolicies() LbListenerPolicyInformer
	// LbListenerPolicyRules returns a LbListenerPolicyRuleInformer.
	LbListenerPolicyRules() LbListenerPolicyRuleInformer
	// LbPools returns a LbPoolInformer.
	LbPools() LbPoolInformer
	// LbPoolMembers returns a LbPoolMemberInformer.
	LbPoolMembers() LbPoolMemberInformer
	// NetworkACLs returns a NetworkACLInformer.
	NetworkACLs() NetworkACLInformer
	// NetworkACLRules returns a NetworkACLRuleInformer.
	NetworkACLRules() NetworkACLRuleInformer
	// PublicGateways returns a PublicGatewayInformer.
	PublicGateways() PublicGatewayInformer
	// SecurityGroups returns a SecurityGroupInformer.
	SecurityGroups() SecurityGroupInformer
	// SecurityGroupNetworkInterfaceAttachments returns a SecurityGroupNetworkInterfaceAttachmentInformer.
	SecurityGroupNetworkInterfaceAttachments() SecurityGroupNetworkInterfaceAttachmentInformer
	// SecurityGroupRules returns a SecurityGroupRuleInformer.
	SecurityGroupRules() SecurityGroupRuleInformer
	// SecurityGroupTargets returns a SecurityGroupTargetInformer.
	SecurityGroupTargets() SecurityGroupTargetInformer
	// Snapshots returns a SnapshotInformer.
	Snapshots() SnapshotInformer
	// SshKeys returns a SshKeyInformer.
	SshKeys() SshKeyInformer
	// Subnets returns a SubnetInformer.
	Subnets() SubnetInformer
	// SubnetNetworkACLAttachments returns a SubnetNetworkACLAttachmentInformer.
	SubnetNetworkACLAttachments() SubnetNetworkACLAttachmentInformer
	// SubnetReservedIPs returns a SubnetReservedIPInformer.
	SubnetReservedIPs() SubnetReservedIPInformer
	// VirtualEndpointGateways returns a VirtualEndpointGatewayInformer.
	VirtualEndpointGateways() VirtualEndpointGatewayInformer
	// VirtualEndpointGatewayIPs returns a VirtualEndpointGatewayIPInformer.
	VirtualEndpointGatewayIPs() VirtualEndpointGatewayIPInformer
	// Volumes returns a VolumeInformer.
	Volumes() VolumeInformer
	// Vpcs returns a VpcInformer.
	Vpcs() VpcInformer
	// VpcAddressPrefixes returns a VpcAddressPrefixInformer.
	VpcAddressPrefixes() VpcAddressPrefixInformer
	// VpcRoutes returns a VpcRouteInformer.
	VpcRoutes() VpcRouteInformer
	// VpcRoutingTables returns a VpcRoutingTableInformer.
	VpcRoutingTables() VpcRoutingTableInformer
	// VpcRoutingTableRoutes returns a VpcRoutingTableRouteInformer.
	VpcRoutingTableRoutes() VpcRoutingTableRouteInformer
	// VpnGateways returns a VpnGatewayInformer.
	VpnGateways() VpnGatewayInformer
	// VpnGatewayConnections returns a VpnGatewayConnectionInformer.
	VpnGatewayConnections() VpnGatewayConnectionInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// DedicatedHosts returns a DedicatedHostInformer.
func (v *version) DedicatedHosts() DedicatedHostInformer {
	return &dedicatedHostInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DedicatedHostDiskManagements returns a DedicatedHostDiskManagementInformer.
func (v *version) DedicatedHostDiskManagements() DedicatedHostDiskManagementInformer {
	return &dedicatedHostDiskManagementInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DedicatedHostGroups returns a DedicatedHostGroupInformer.
func (v *version) DedicatedHostGroups() DedicatedHostGroupInformer {
	return &dedicatedHostGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// FloatingIPs returns a FloatingIPInformer.
func (v *version) FloatingIPs() FloatingIPInformer {
	return &floatingIPInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// FlowLogs returns a FlowLogInformer.
func (v *version) FlowLogs() FlowLogInformer {
	return &flowLogInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// IkePolicies returns a IkePolicyInformer.
func (v *version) IkePolicies() IkePolicyInformer {
	return &ikePolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Images returns a ImageInformer.
func (v *version) Images() ImageInformer {
	return &imageInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Instances returns a InstanceInformer.
func (v *version) Instances() InstanceInformer {
	return &instanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceDiskManagements returns a InstanceDiskManagementInformer.
func (v *version) InstanceDiskManagements() InstanceDiskManagementInformer {
	return &instanceDiskManagementInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroups returns a InstanceGroupInformer.
func (v *version) InstanceGroups() InstanceGroupInformer {
	return &instanceGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroupManagers returns a InstanceGroupManagerInformer.
func (v *version) InstanceGroupManagers() InstanceGroupManagerInformer {
	return &instanceGroupManagerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroupManagerActions returns a InstanceGroupManagerActionInformer.
func (v *version) InstanceGroupManagerActions() InstanceGroupManagerActionInformer {
	return &instanceGroupManagerActionInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroupManagerPolicies returns a InstanceGroupManagerPolicyInformer.
func (v *version) InstanceGroupManagerPolicies() InstanceGroupManagerPolicyInformer {
	return &instanceGroupManagerPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroupMemberships returns a InstanceGroupMembershipInformer.
func (v *version) InstanceGroupMemberships() InstanceGroupMembershipInformer {
	return &instanceGroupMembershipInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceTemplates returns a InstanceTemplateInformer.
func (v *version) InstanceTemplates() InstanceTemplateInformer {
	return &instanceTemplateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceVolumeAttachments returns a InstanceVolumeAttachmentInformer.
func (v *version) InstanceVolumeAttachments() InstanceVolumeAttachmentInformer {
	return &instanceVolumeAttachmentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// IpsecPolicies returns a IpsecPolicyInformer.
func (v *version) IpsecPolicies() IpsecPolicyInformer {
	return &ipsecPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Lbs returns a LbInformer.
func (v *version) Lbs() LbInformer {
	return &lbInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LbListeners returns a LbListenerInformer.
func (v *version) LbListeners() LbListenerInformer {
	return &lbListenerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LbListenerPolicies returns a LbListenerPolicyInformer.
func (v *version) LbListenerPolicies() LbListenerPolicyInformer {
	return &lbListenerPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LbListenerPolicyRules returns a LbListenerPolicyRuleInformer.
func (v *version) LbListenerPolicyRules() LbListenerPolicyRuleInformer {
	return &lbListenerPolicyRuleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LbPools returns a LbPoolInformer.
func (v *version) LbPools() LbPoolInformer {
	return &lbPoolInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LbPoolMembers returns a LbPoolMemberInformer.
func (v *version) LbPoolMembers() LbPoolMemberInformer {
	return &lbPoolMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkACLs returns a NetworkACLInformer.
func (v *version) NetworkACLs() NetworkACLInformer {
	return &networkACLInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkACLRules returns a NetworkACLRuleInformer.
func (v *version) NetworkACLRules() NetworkACLRuleInformer {
	return &networkACLRuleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PublicGateways returns a PublicGatewayInformer.
func (v *version) PublicGateways() PublicGatewayInformer {
	return &publicGatewayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SecurityGroups returns a SecurityGroupInformer.
func (v *version) SecurityGroups() SecurityGroupInformer {
	return &securityGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SecurityGroupNetworkInterfaceAttachments returns a SecurityGroupNetworkInterfaceAttachmentInformer.
func (v *version) SecurityGroupNetworkInterfaceAttachments() SecurityGroupNetworkInterfaceAttachmentInformer {
	return &securityGroupNetworkInterfaceAttachmentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SecurityGroupRules returns a SecurityGroupRuleInformer.
func (v *version) SecurityGroupRules() SecurityGroupRuleInformer {
	return &securityGroupRuleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SecurityGroupTargets returns a SecurityGroupTargetInformer.
func (v *version) SecurityGroupTargets() SecurityGroupTargetInformer {
	return &securityGroupTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Snapshots returns a SnapshotInformer.
func (v *version) Snapshots() SnapshotInformer {
	return &snapshotInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SshKeys returns a SshKeyInformer.
func (v *version) SshKeys() SshKeyInformer {
	return &sshKeyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Subnets returns a SubnetInformer.
func (v *version) Subnets() SubnetInformer {
	return &subnetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SubnetNetworkACLAttachments returns a SubnetNetworkACLAttachmentInformer.
func (v *version) SubnetNetworkACLAttachments() SubnetNetworkACLAttachmentInformer {
	return &subnetNetworkACLAttachmentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SubnetReservedIPs returns a SubnetReservedIPInformer.
func (v *version) SubnetReservedIPs() SubnetReservedIPInformer {
	return &subnetReservedIPInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VirtualEndpointGateways returns a VirtualEndpointGatewayInformer.
func (v *version) VirtualEndpointGateways() VirtualEndpointGatewayInformer {
	return &virtualEndpointGatewayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VirtualEndpointGatewayIPs returns a VirtualEndpointGatewayIPInformer.
func (v *version) VirtualEndpointGatewayIPs() VirtualEndpointGatewayIPInformer {
	return &virtualEndpointGatewayIPInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Volumes returns a VolumeInformer.
func (v *version) Volumes() VolumeInformer {
	return &volumeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Vpcs returns a VpcInformer.
func (v *version) Vpcs() VpcInformer {
	return &vpcInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpcAddressPrefixes returns a VpcAddressPrefixInformer.
func (v *version) VpcAddressPrefixes() VpcAddressPrefixInformer {
	return &vpcAddressPrefixInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpcRoutes returns a VpcRouteInformer.
func (v *version) VpcRoutes() VpcRouteInformer {
	return &vpcRouteInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpcRoutingTables returns a VpcRoutingTableInformer.
func (v *version) VpcRoutingTables() VpcRoutingTableInformer {
	return &vpcRoutingTableInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpcRoutingTableRoutes returns a VpcRoutingTableRouteInformer.
func (v *version) VpcRoutingTableRoutes() VpcRoutingTableRouteInformer {
	return &vpcRoutingTableRouteInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpnGateways returns a VpnGatewayInformer.
func (v *version) VpnGateways() VpnGatewayInformer {
	return &vpnGatewayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpnGatewayConnections returns a VpnGatewayConnectionInformer.
func (v *version) VpnGatewayConnections() VpnGatewayConnectionInformer {
	return &vpnGatewayConnectionInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
