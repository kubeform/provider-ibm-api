/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/dns/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GlbLister helps list Glbs.
// All objects returned here must be treated as read-only.
type GlbLister interface {
	// List lists all Glbs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Glb, err error)
	// Glbs returns an object that can list and get Glbs.
	Glbs(namespace string) GlbNamespaceLister
	GlbListerExpansion
}

// glbLister implements the GlbLister interface.
type glbLister struct {
	indexer cache.Indexer
}

// NewGlbLister returns a new GlbLister.
func NewGlbLister(indexer cache.Indexer) GlbLister {
	return &glbLister{indexer: indexer}
}

// List lists all Glbs in the indexer.
func (s *glbLister) List(selector labels.Selector) (ret []*v1alpha1.Glb, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Glb))
	})
	return ret, err
}

// Glbs returns an object that can list and get Glbs.
func (s *glbLister) Glbs(namespace string) GlbNamespaceLister {
	return glbNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GlbNamespaceLister helps list and get Glbs.
// All objects returned here must be treated as read-only.
type GlbNamespaceLister interface {
	// List lists all Glbs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Glb, err error)
	// Get retrieves the Glb from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Glb, error)
	GlbNamespaceListerExpansion
}

// glbNamespaceLister implements the GlbNamespaceLister
// interface.
type glbNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Glbs in the indexer for a given namespace.
func (s glbNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Glb, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Glb))
	})
	return ret, err
}

// Get retrieves the Glb from the indexer for a given namespace and name.
func (s glbNamespaceLister) Get(name string) (*v1alpha1.Glb, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("glb"), name)
	}
	return obj.(*v1alpha1.Glb), nil
}
