/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/cis/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OriginPoolLister helps list OriginPools.
// All objects returned here must be treated as read-only.
type OriginPoolLister interface {
	// List lists all OriginPools in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OriginPool, err error)
	// OriginPools returns an object that can list and get OriginPools.
	OriginPools(namespace string) OriginPoolNamespaceLister
	OriginPoolListerExpansion
}

// originPoolLister implements the OriginPoolLister interface.
type originPoolLister struct {
	indexer cache.Indexer
}

// NewOriginPoolLister returns a new OriginPoolLister.
func NewOriginPoolLister(indexer cache.Indexer) OriginPoolLister {
	return &originPoolLister{indexer: indexer}
}

// List lists all OriginPools in the indexer.
func (s *originPoolLister) List(selector labels.Selector) (ret []*v1alpha1.OriginPool, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OriginPool))
	})
	return ret, err
}

// OriginPools returns an object that can list and get OriginPools.
func (s *originPoolLister) OriginPools(namespace string) OriginPoolNamespaceLister {
	return originPoolNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OriginPoolNamespaceLister helps list and get OriginPools.
// All objects returned here must be treated as read-only.
type OriginPoolNamespaceLister interface {
	// List lists all OriginPools in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OriginPool, err error)
	// Get retrieves the OriginPool from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.OriginPool, error)
	OriginPoolNamespaceListerExpansion
}

// originPoolNamespaceLister implements the OriginPoolNamespaceLister
// interface.
type originPoolNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OriginPools in the indexer for a given namespace.
func (s originPoolNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OriginPool, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OriginPool))
	})
	return ret, err
}

// Get retrieves the OriginPool from the indexer for a given namespace and name.
func (s originPoolNamespaceLister) Get(name string) (*v1alpha1.OriginPool, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("originpool"), name)
	}
	return obj.(*v1alpha1.OriginPool), nil
}
