/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/container/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VpcAlbLister helps list VpcAlbs.
// All objects returned here must be treated as read-only.
type VpcAlbLister interface {
	// List lists all VpcAlbs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VpcAlb, err error)
	// VpcAlbs returns an object that can list and get VpcAlbs.
	VpcAlbs(namespace string) VpcAlbNamespaceLister
	VpcAlbListerExpansion
}

// vpcAlbLister implements the VpcAlbLister interface.
type vpcAlbLister struct {
	indexer cache.Indexer
}

// NewVpcAlbLister returns a new VpcAlbLister.
func NewVpcAlbLister(indexer cache.Indexer) VpcAlbLister {
	return &vpcAlbLister{indexer: indexer}
}

// List lists all VpcAlbs in the indexer.
func (s *vpcAlbLister) List(selector labels.Selector) (ret []*v1alpha1.VpcAlb, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpcAlb))
	})
	return ret, err
}

// VpcAlbs returns an object that can list and get VpcAlbs.
func (s *vpcAlbLister) VpcAlbs(namespace string) VpcAlbNamespaceLister {
	return vpcAlbNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VpcAlbNamespaceLister helps list and get VpcAlbs.
// All objects returned here must be treated as read-only.
type VpcAlbNamespaceLister interface {
	// List lists all VpcAlbs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VpcAlb, err error)
	// Get retrieves the VpcAlb from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VpcAlb, error)
	VpcAlbNamespaceListerExpansion
}

// vpcAlbNamespaceLister implements the VpcAlbNamespaceLister
// interface.
type vpcAlbNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VpcAlbs in the indexer for a given namespace.
func (s vpcAlbNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VpcAlb, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpcAlb))
	})
	return ret, err
}

// Get retrieves the VpcAlb from the indexer for a given namespace and name.
func (s vpcAlbNamespaceLister) Get(name string) (*v1alpha1.VpcAlb, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpcalb"), name)
	}
	return obj.(*v1alpha1.VpcAlb), nil
}
