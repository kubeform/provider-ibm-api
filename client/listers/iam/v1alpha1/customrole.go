/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/iam/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CustomRoleLister helps list CustomRoles.
// All objects returned here must be treated as read-only.
type CustomRoleLister interface {
	// List lists all CustomRoles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomRole, err error)
	// CustomRoles returns an object that can list and get CustomRoles.
	CustomRoles(namespace string) CustomRoleNamespaceLister
	CustomRoleListerExpansion
}

// customRoleLister implements the CustomRoleLister interface.
type customRoleLister struct {
	indexer cache.Indexer
}

// NewCustomRoleLister returns a new CustomRoleLister.
func NewCustomRoleLister(indexer cache.Indexer) CustomRoleLister {
	return &customRoleLister{indexer: indexer}
}

// List lists all CustomRoles in the indexer.
func (s *customRoleLister) List(selector labels.Selector) (ret []*v1alpha1.CustomRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomRole))
	})
	return ret, err
}

// CustomRoles returns an object that can list and get CustomRoles.
func (s *customRoleLister) CustomRoles(namespace string) CustomRoleNamespaceLister {
	return customRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomRoleNamespaceLister helps list and get CustomRoles.
// All objects returned here must be treated as read-only.
type CustomRoleNamespaceLister interface {
	// List lists all CustomRoles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomRole, err error)
	// Get retrieves the CustomRole from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CustomRole, error)
	CustomRoleNamespaceListerExpansion
}

// customRoleNamespaceLister implements the CustomRoleNamespaceLister
// interface.
type customRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomRoles in the indexer for a given namespace.
func (s customRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomRole))
	})
	return ret, err
}

// Get retrieves the CustomRole from the indexer for a given namespace and name.
func (s customRoleNamespaceLister) Get(name string) (*v1alpha1.CustomRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customrole"), name)
	}
	return obj.(*v1alpha1.CustomRole), nil
}
