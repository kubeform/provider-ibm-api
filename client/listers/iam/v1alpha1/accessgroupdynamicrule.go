/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/iam/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AccessGroupDynamicRuleLister helps list AccessGroupDynamicRules.
// All objects returned here must be treated as read-only.
type AccessGroupDynamicRuleLister interface {
	// List lists all AccessGroupDynamicRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccessGroupDynamicRule, err error)
	// AccessGroupDynamicRules returns an object that can list and get AccessGroupDynamicRules.
	AccessGroupDynamicRules(namespace string) AccessGroupDynamicRuleNamespaceLister
	AccessGroupDynamicRuleListerExpansion
}

// accessGroupDynamicRuleLister implements the AccessGroupDynamicRuleLister interface.
type accessGroupDynamicRuleLister struct {
	indexer cache.Indexer
}

// NewAccessGroupDynamicRuleLister returns a new AccessGroupDynamicRuleLister.
func NewAccessGroupDynamicRuleLister(indexer cache.Indexer) AccessGroupDynamicRuleLister {
	return &accessGroupDynamicRuleLister{indexer: indexer}
}

// List lists all AccessGroupDynamicRules in the indexer.
func (s *accessGroupDynamicRuleLister) List(selector labels.Selector) (ret []*v1alpha1.AccessGroupDynamicRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccessGroupDynamicRule))
	})
	return ret, err
}

// AccessGroupDynamicRules returns an object that can list and get AccessGroupDynamicRules.
func (s *accessGroupDynamicRuleLister) AccessGroupDynamicRules(namespace string) AccessGroupDynamicRuleNamespaceLister {
	return accessGroupDynamicRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AccessGroupDynamicRuleNamespaceLister helps list and get AccessGroupDynamicRules.
// All objects returned here must be treated as read-only.
type AccessGroupDynamicRuleNamespaceLister interface {
	// List lists all AccessGroupDynamicRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccessGroupDynamicRule, err error)
	// Get retrieves the AccessGroupDynamicRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AccessGroupDynamicRule, error)
	AccessGroupDynamicRuleNamespaceListerExpansion
}

// accessGroupDynamicRuleNamespaceLister implements the AccessGroupDynamicRuleNamespaceLister
// interface.
type accessGroupDynamicRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AccessGroupDynamicRules in the indexer for a given namespace.
func (s accessGroupDynamicRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AccessGroupDynamicRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccessGroupDynamicRule))
	})
	return ret, err
}

// Get retrieves the AccessGroupDynamicRule from the indexer for a given namespace and name.
func (s accessGroupDynamicRuleNamespaceLister) Get(name string) (*v1alpha1.AccessGroupDynamicRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("accessgroupdynamicrule"), name)
	}
	return obj.(*v1alpha1.AccessGroupDynamicRule), nil
}
