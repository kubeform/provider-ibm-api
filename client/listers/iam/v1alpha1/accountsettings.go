/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/iam/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AccountSettingsLister helps list AccountSettingses.
// All objects returned here must be treated as read-only.
type AccountSettingsLister interface {
	// List lists all AccountSettingses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccountSettings, err error)
	// AccountSettingses returns an object that can list and get AccountSettingses.
	AccountSettingses(namespace string) AccountSettingsNamespaceLister
	AccountSettingsListerExpansion
}

// accountSettingsLister implements the AccountSettingsLister interface.
type accountSettingsLister struct {
	indexer cache.Indexer
}

// NewAccountSettingsLister returns a new AccountSettingsLister.
func NewAccountSettingsLister(indexer cache.Indexer) AccountSettingsLister {
	return &accountSettingsLister{indexer: indexer}
}

// List lists all AccountSettingses in the indexer.
func (s *accountSettingsLister) List(selector labels.Selector) (ret []*v1alpha1.AccountSettings, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccountSettings))
	})
	return ret, err
}

// AccountSettingses returns an object that can list and get AccountSettingses.
func (s *accountSettingsLister) AccountSettingses(namespace string) AccountSettingsNamespaceLister {
	return accountSettingsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AccountSettingsNamespaceLister helps list and get AccountSettingses.
// All objects returned here must be treated as read-only.
type AccountSettingsNamespaceLister interface {
	// List lists all AccountSettingses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccountSettings, err error)
	// Get retrieves the AccountSettings from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AccountSettings, error)
	AccountSettingsNamespaceListerExpansion
}

// accountSettingsNamespaceLister implements the AccountSettingsNamespaceLister
// interface.
type accountSettingsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AccountSettingses in the indexer for a given namespace.
func (s accountSettingsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AccountSettings, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccountSettings))
	})
	return ret, err
}

// Get retrieves the AccountSettings from the indexer for a given namespace and name.
func (s accountSettingsNamespaceLister) Get(name string) (*v1alpha1.AccountSettings, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("accountsettings"), name)
	}
	return obj.(*v1alpha1.AccountSettings), nil
}
