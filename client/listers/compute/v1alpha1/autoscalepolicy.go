/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/compute/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AutoscalePolicyLister helps list AutoscalePolicies.
// All objects returned here must be treated as read-only.
type AutoscalePolicyLister interface {
	// List lists all AutoscalePolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AutoscalePolicy, err error)
	// AutoscalePolicies returns an object that can list and get AutoscalePolicies.
	AutoscalePolicies(namespace string) AutoscalePolicyNamespaceLister
	AutoscalePolicyListerExpansion
}

// autoscalePolicyLister implements the AutoscalePolicyLister interface.
type autoscalePolicyLister struct {
	indexer cache.Indexer
}

// NewAutoscalePolicyLister returns a new AutoscalePolicyLister.
func NewAutoscalePolicyLister(indexer cache.Indexer) AutoscalePolicyLister {
	return &autoscalePolicyLister{indexer: indexer}
}

// List lists all AutoscalePolicies in the indexer.
func (s *autoscalePolicyLister) List(selector labels.Selector) (ret []*v1alpha1.AutoscalePolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AutoscalePolicy))
	})
	return ret, err
}

// AutoscalePolicies returns an object that can list and get AutoscalePolicies.
func (s *autoscalePolicyLister) AutoscalePolicies(namespace string) AutoscalePolicyNamespaceLister {
	return autoscalePolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AutoscalePolicyNamespaceLister helps list and get AutoscalePolicies.
// All objects returned here must be treated as read-only.
type AutoscalePolicyNamespaceLister interface {
	// List lists all AutoscalePolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AutoscalePolicy, err error)
	// Get retrieves the AutoscalePolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AutoscalePolicy, error)
	AutoscalePolicyNamespaceListerExpansion
}

// autoscalePolicyNamespaceLister implements the AutoscalePolicyNamespaceLister
// interface.
type autoscalePolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AutoscalePolicies in the indexer for a given namespace.
func (s autoscalePolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AutoscalePolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AutoscalePolicy))
	})
	return ret, err
}

// Get retrieves the AutoscalePolicy from the indexer for a given namespace and name.
func (s autoscalePolicyNamespaceLister) Get(name string) (*v1alpha1.AutoscalePolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("autoscalepolicy"), name)
	}
	return obj.(*v1alpha1.AutoscalePolicy), nil
}
