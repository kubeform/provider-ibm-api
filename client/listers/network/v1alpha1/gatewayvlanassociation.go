/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/network/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GatewayVLANAssociationLister helps list GatewayVLANAssociations.
// All objects returned here must be treated as read-only.
type GatewayVLANAssociationLister interface {
	// List lists all GatewayVLANAssociations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GatewayVLANAssociation, err error)
	// GatewayVLANAssociations returns an object that can list and get GatewayVLANAssociations.
	GatewayVLANAssociations(namespace string) GatewayVLANAssociationNamespaceLister
	GatewayVLANAssociationListerExpansion
}

// gatewayVLANAssociationLister implements the GatewayVLANAssociationLister interface.
type gatewayVLANAssociationLister struct {
	indexer cache.Indexer
}

// NewGatewayVLANAssociationLister returns a new GatewayVLANAssociationLister.
func NewGatewayVLANAssociationLister(indexer cache.Indexer) GatewayVLANAssociationLister {
	return &gatewayVLANAssociationLister{indexer: indexer}
}

// List lists all GatewayVLANAssociations in the indexer.
func (s *gatewayVLANAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.GatewayVLANAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GatewayVLANAssociation))
	})
	return ret, err
}

// GatewayVLANAssociations returns an object that can list and get GatewayVLANAssociations.
func (s *gatewayVLANAssociationLister) GatewayVLANAssociations(namespace string) GatewayVLANAssociationNamespaceLister {
	return gatewayVLANAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GatewayVLANAssociationNamespaceLister helps list and get GatewayVLANAssociations.
// All objects returned here must be treated as read-only.
type GatewayVLANAssociationNamespaceLister interface {
	// List lists all GatewayVLANAssociations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GatewayVLANAssociation, err error)
	// Get retrieves the GatewayVLANAssociation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GatewayVLANAssociation, error)
	GatewayVLANAssociationNamespaceListerExpansion
}

// gatewayVLANAssociationNamespaceLister implements the GatewayVLANAssociationNamespaceLister
// interface.
type gatewayVLANAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GatewayVLANAssociations in the indexer for a given namespace.
func (s gatewayVLANAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GatewayVLANAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GatewayVLANAssociation))
	})
	return ret, err
}

// Get retrieves the GatewayVLANAssociation from the indexer for a given namespace and name.
func (s gatewayVLANAssociationNamespaceLister) Get(name string) (*v1alpha1.GatewayVLANAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("gatewayvlanassociation"), name)
	}
	return obj.(*v1alpha1.GatewayVLANAssociation), nil
}
