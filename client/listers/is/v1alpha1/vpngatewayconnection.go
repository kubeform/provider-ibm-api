/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/is/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VpnGatewayConnectionLister helps list VpnGatewayConnections.
// All objects returned here must be treated as read-only.
type VpnGatewayConnectionLister interface {
	// List lists all VpnGatewayConnections in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayConnection, err error)
	// VpnGatewayConnections returns an object that can list and get VpnGatewayConnections.
	VpnGatewayConnections(namespace string) VpnGatewayConnectionNamespaceLister
	VpnGatewayConnectionListerExpansion
}

// vpnGatewayConnectionLister implements the VpnGatewayConnectionLister interface.
type vpnGatewayConnectionLister struct {
	indexer cache.Indexer
}

// NewVpnGatewayConnectionLister returns a new VpnGatewayConnectionLister.
func NewVpnGatewayConnectionLister(indexer cache.Indexer) VpnGatewayConnectionLister {
	return &vpnGatewayConnectionLister{indexer: indexer}
}

// List lists all VpnGatewayConnections in the indexer.
func (s *vpnGatewayConnectionLister) List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayConnection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpnGatewayConnection))
	})
	return ret, err
}

// VpnGatewayConnections returns an object that can list and get VpnGatewayConnections.
func (s *vpnGatewayConnectionLister) VpnGatewayConnections(namespace string) VpnGatewayConnectionNamespaceLister {
	return vpnGatewayConnectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VpnGatewayConnectionNamespaceLister helps list and get VpnGatewayConnections.
// All objects returned here must be treated as read-only.
type VpnGatewayConnectionNamespaceLister interface {
	// List lists all VpnGatewayConnections in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayConnection, err error)
	// Get retrieves the VpnGatewayConnection from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VpnGatewayConnection, error)
	VpnGatewayConnectionNamespaceListerExpansion
}

// vpnGatewayConnectionNamespaceLister implements the VpnGatewayConnectionNamespaceLister
// interface.
type vpnGatewayConnectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VpnGatewayConnections in the indexer for a given namespace.
func (s vpnGatewayConnectionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayConnection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpnGatewayConnection))
	})
	return ret, err
}

// Get retrieves the VpnGatewayConnection from the indexer for a given namespace and name.
func (s vpnGatewayConnectionNamespaceLister) Get(name string) (*v1alpha1.VpnGatewayConnection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpngatewayconnection"), name)
	}
	return obj.(*v1alpha1.VpnGatewayConnection), nil
}
