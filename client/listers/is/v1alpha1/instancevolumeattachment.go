/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/is/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstanceVolumeAttachmentLister helps list InstanceVolumeAttachments.
// All objects returned here must be treated as read-only.
type InstanceVolumeAttachmentLister interface {
	// List lists all InstanceVolumeAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceVolumeAttachment, err error)
	// InstanceVolumeAttachments returns an object that can list and get InstanceVolumeAttachments.
	InstanceVolumeAttachments(namespace string) InstanceVolumeAttachmentNamespaceLister
	InstanceVolumeAttachmentListerExpansion
}

// instanceVolumeAttachmentLister implements the InstanceVolumeAttachmentLister interface.
type instanceVolumeAttachmentLister struct {
	indexer cache.Indexer
}

// NewInstanceVolumeAttachmentLister returns a new InstanceVolumeAttachmentLister.
func NewInstanceVolumeAttachmentLister(indexer cache.Indexer) InstanceVolumeAttachmentLister {
	return &instanceVolumeAttachmentLister{indexer: indexer}
}

// List lists all InstanceVolumeAttachments in the indexer.
func (s *instanceVolumeAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceVolumeAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceVolumeAttachment))
	})
	return ret, err
}

// InstanceVolumeAttachments returns an object that can list and get InstanceVolumeAttachments.
func (s *instanceVolumeAttachmentLister) InstanceVolumeAttachments(namespace string) InstanceVolumeAttachmentNamespaceLister {
	return instanceVolumeAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstanceVolumeAttachmentNamespaceLister helps list and get InstanceVolumeAttachments.
// All objects returned here must be treated as read-only.
type InstanceVolumeAttachmentNamespaceLister interface {
	// List lists all InstanceVolumeAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceVolumeAttachment, err error)
	// Get retrieves the InstanceVolumeAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstanceVolumeAttachment, error)
	InstanceVolumeAttachmentNamespaceListerExpansion
}

// instanceVolumeAttachmentNamespaceLister implements the InstanceVolumeAttachmentNamespaceLister
// interface.
type instanceVolumeAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstanceVolumeAttachments in the indexer for a given namespace.
func (s instanceVolumeAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceVolumeAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceVolumeAttachment))
	})
	return ret, err
}

// Get retrieves the InstanceVolumeAttachment from the indexer for a given namespace and name.
func (s instanceVolumeAttachmentNamespaceLister) Get(name string) (*v1alpha1.InstanceVolumeAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("instancevolumeattachment"), name)
	}
	return obj.(*v1alpha1.InstanceVolumeAttachment), nil
}
