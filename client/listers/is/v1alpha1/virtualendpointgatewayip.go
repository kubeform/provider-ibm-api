/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ibm-api/apis/is/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualEndpointGatewayIPLister helps list VirtualEndpointGatewayIPs.
// All objects returned here must be treated as read-only.
type VirtualEndpointGatewayIPLister interface {
	// List lists all VirtualEndpointGatewayIPs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualEndpointGatewayIP, err error)
	// VirtualEndpointGatewayIPs returns an object that can list and get VirtualEndpointGatewayIPs.
	VirtualEndpointGatewayIPs(namespace string) VirtualEndpointGatewayIPNamespaceLister
	VirtualEndpointGatewayIPListerExpansion
}

// virtualEndpointGatewayIPLister implements the VirtualEndpointGatewayIPLister interface.
type virtualEndpointGatewayIPLister struct {
	indexer cache.Indexer
}

// NewVirtualEndpointGatewayIPLister returns a new VirtualEndpointGatewayIPLister.
func NewVirtualEndpointGatewayIPLister(indexer cache.Indexer) VirtualEndpointGatewayIPLister {
	return &virtualEndpointGatewayIPLister{indexer: indexer}
}

// List lists all VirtualEndpointGatewayIPs in the indexer.
func (s *virtualEndpointGatewayIPLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualEndpointGatewayIP, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualEndpointGatewayIP))
	})
	return ret, err
}

// VirtualEndpointGatewayIPs returns an object that can list and get VirtualEndpointGatewayIPs.
func (s *virtualEndpointGatewayIPLister) VirtualEndpointGatewayIPs(namespace string) VirtualEndpointGatewayIPNamespaceLister {
	return virtualEndpointGatewayIPNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualEndpointGatewayIPNamespaceLister helps list and get VirtualEndpointGatewayIPs.
// All objects returned here must be treated as read-only.
type VirtualEndpointGatewayIPNamespaceLister interface {
	// List lists all VirtualEndpointGatewayIPs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualEndpointGatewayIP, err error)
	// Get retrieves the VirtualEndpointGatewayIP from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VirtualEndpointGatewayIP, error)
	VirtualEndpointGatewayIPNamespaceListerExpansion
}

// virtualEndpointGatewayIPNamespaceLister implements the VirtualEndpointGatewayIPNamespaceLister
// interface.
type virtualEndpointGatewayIPNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualEndpointGatewayIPs in the indexer for a given namespace.
func (s virtualEndpointGatewayIPNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualEndpointGatewayIP, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualEndpointGatewayIP))
	})
	return ret, err
}

// Get retrieves the VirtualEndpointGatewayIP from the indexer for a given namespace and name.
func (s virtualEndpointGatewayIPNamespaceLister) Get(name string) (*v1alpha1.VirtualEndpointGatewayIP, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualendpointgatewayip"), name)
	}
	return obj.(*v1alpha1.VirtualEndpointGatewayIP), nil
}
