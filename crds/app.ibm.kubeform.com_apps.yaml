apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: ibm.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: apps.app.ibm.kubeform.com
spec:
  group: app.ibm.kubeform.com
  names:
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  appPath:
                    description: Define the  path of the zip file of the application.
                    type: string
                  appVersion:
                    description: Version of the application
                    type: string
                  buildpack:
                    description: 'Buildpack to build the app. 3 options: a) Blank
                      means autodetection; b) A Git Url pointing to a buildpack; c)
                      Name of an installed buildpack.'
                    type: string
                  command:
                    description: The initial command for the app
                    type: string
                  diskQuota:
                    description: The maximum amount of disk available to an instance
                      of an app. In megabytes.
                    format: int64
                    type: integer
                  environmentJSON:
                    additionalProperties:
                      type: string
                    description: Key/value pairs of all the environment variables
                      to run in your app. Does not include any system or service variables.
                    type: object
                  healthCheckHTTPEndpoint:
                    description: Endpoint called to determine if the app is healthy.
                    type: string
                  healthCheckTimeout:
                    description: Timeout in seconds for health checking of an staged
                      app when starting up.
                    format: int64
                    type: integer
                  healthCheckType:
                    description: Type of health check to perform.
                    type: string
                  id:
                    type: string
                  instances:
                    description: The number of instances
                    format: int64
                    type: integer
                  memory:
                    description: The amount of memory each instance should have. In
                      megabytes.
                    format: int64
                    type: integer
                  name:
                    description: The name for the app
                    type: string
                  routeGuid:
                    description: Define the route guids which should be bound to the
                      application.
                    items:
                      type: string
                    type: array
                  serviceInstanceGuid:
                    description: Define the service instance guids that should be
                      bound to this application.
                    items:
                      type: string
                    type: array
                  spaceGuid:
                    description: Define space guid to which app belongs
                    type: string
                  tags:
                    items:
                      type: string
                    type: array
                  waitTimeMinutes:
                    description: Define timeout to wait for the app instances to start/update/restage
                      etc.
                    format: int64
                    type: integer
                required:
                - appPath
                - name
                - spaceGuid
                type: object
              state:
                properties:
                  appPath:
                    description: Define the  path of the zip file of the application.
                    type: string
                  appVersion:
                    description: Version of the application
                    type: string
                  buildpack:
                    description: 'Buildpack to build the app. 3 options: a) Blank
                      means autodetection; b) A Git Url pointing to a buildpack; c)
                      Name of an installed buildpack.'
                    type: string
                  command:
                    description: The initial command for the app
                    type: string
                  diskQuota:
                    description: The maximum amount of disk available to an instance
                      of an app. In megabytes.
                    format: int64
                    type: integer
                  environmentJSON:
                    additionalProperties:
                      type: string
                    description: Key/value pairs of all the environment variables
                      to run in your app. Does not include any system or service variables.
                    type: object
                  healthCheckHTTPEndpoint:
                    description: Endpoint called to determine if the app is healthy.
                    type: string
                  healthCheckTimeout:
                    description: Timeout in seconds for health checking of an staged
                      app when starting up.
                    format: int64
                    type: integer
                  healthCheckType:
                    description: Type of health check to perform.
                    type: string
                  id:
                    type: string
                  instances:
                    description: The number of instances
                    format: int64
                    type: integer
                  memory:
                    description: The amount of memory each instance should have. In
                      megabytes.
                    format: int64
                    type: integer
                  name:
                    description: The name for the app
                    type: string
                  routeGuid:
                    description: Define the route guids which should be bound to the
                      application.
                    items:
                      type: string
                    type: array
                  serviceInstanceGuid:
                    description: Define the service instance guids that should be
                      bound to this application.
                    items:
                      type: string
                    type: array
                  spaceGuid:
                    description: Define space guid to which app belongs
                    type: string
                  tags:
                    items:
                      type: string
                    type: array
                  waitTimeMinutes:
                    description: Define timeout to wait for the app instances to start/update/restage
                      etc.
                    format: int64
                    type: integer
                required:
                - appPath
                - name
                - spaceGuid
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
