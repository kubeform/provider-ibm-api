apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: ibm.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: keys.kms.ibm.kubeform.com
spec:
  group: kms.ibm.kubeform.com
  names:
    kind: Key
    listKind: KeyList
    plural: keys
    singular: key
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  crn:
                    description: Crn of the key
                    type: string
                  encryptedNonce:
                    description: Only for imported root key
                    type: string
                  endpointType:
                    description: public or private
                    type: string
                  expirationDate:
                    description: The date the key material expires. The date format
                      follows RFC 3339. You can set an expiration date on any key
                      on its creation. A key moves into the Deactivated state within
                      one hour past its expiration date, if one is assigned. If you
                      create a key without specifying an expiration date, the key
                      does not expire
                    type: string
                  forceDelete:
                    description: set to true to force delete the key
                    type: boolean
                  id:
                    type: string
                  instanceID:
                    description: Key protect or hpcs instance GUID
                    type: string
                  ivValue:
                    description: Only for imported root key
                    type: string
                  keyID:
                    description: Key ID
                    type: string
                  keyName:
                    description: Key name
                    type: string
                  keyRingID:
                    description: Key Ring for the Key
                    type: string
                  payload:
                    type: string
                  policies:
                    description: Creates or updates one or more policies for the specified
                      key
                    properties:
                      dualAuthDelete:
                        description: Data associated with the dual authorization delete
                          policy.
                        items:
                          properties:
                            ID:
                              description: The v4 UUID used to uniquely identify the
                                policy resource, as specified by RFC 4122.
                              type: string
                            createdBy:
                              description: The unique identifier for the resource
                                that created the policy.
                              type: string
                            creationDate:
                              description: The date the policy was created. The date
                                format follows RFC 3339.
                              type: string
                            crn:
                              description: Cloud Resource Name (CRN) that uniquely
                                identifies your cloud resources.
                              type: string
                            enabled:
                              description: If set to true, Key Protect enables a dual
                                authorization policy on a single key.
                              type: boolean
                            lastUpdateDate:
                              description: Updates when the policy is replaced or
                                modified. The date format follows RFC 3339.
                              type: string
                            updatedBy:
                              description: The unique identifier for the resource
                                that updated the policy.
                              type: string
                          required:
                          - enabled
                          type: object
                        type: array
                      rotation:
                        description: Specifies the key rotation time interval in months,
                          with a minimum of 1, and a maximum of 12
                        items:
                          properties:
                            ID:
                              description: The v4 UUID used to uniquely identify the
                                policy resource, as specified by RFC 4122.
                              type: string
                            createdBy:
                              description: The unique identifier for the resource
                                that created the policy.
                              type: string
                            creationDate:
                              description: The date the policy was created. The date
                                format follows RFC 3339.
                              type: string
                            crn:
                              description: Cloud Resource Name (CRN) that uniquely
                                identifies your cloud resources.
                              type: string
                            intervalMonth:
                              description: Specifies the key rotation time interval
                                in months
                              format: int64
                              type: integer
                            lastUpdateDate:
                              description: Updates when the policy is replaced or
                                modified. The date format follows RFC 3339.
                              type: string
                            updatedBy:
                              description: The unique identifier for the resource
                                that updated the policy.
                              type: string
                          required:
                          - intervalMonth
                          type: object
                        type: array
                    type: object
                  resourceControllerURL:
                    description: The URL of the IBM Cloud dashboard that can be used
                      to explore and view details about the resource
                    type: string
                  resourceCrn:
                    description: The crn of the resource
                    type: string
                  resourceGroupName:
                    description: The resource group name in which resource is provisioned
                    type: string
                  resourceName:
                    description: The name of the resource
                    type: string
                  resourceStatus:
                    description: The status of the resource
                    type: string
                  standardKey:
                    description: Standard key type
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: type of service hs-crypto or kms
                    type: string
                required:
                - instanceID
                - keyName
                type: object
              state:
                properties:
                  crn:
                    description: Crn of the key
                    type: string
                  encryptedNonce:
                    description: Only for imported root key
                    type: string
                  endpointType:
                    description: public or private
                    type: string
                  expirationDate:
                    description: The date the key material expires. The date format
                      follows RFC 3339. You can set an expiration date on any key
                      on its creation. A key moves into the Deactivated state within
                      one hour past its expiration date, if one is assigned. If you
                      create a key without specifying an expiration date, the key
                      does not expire
                    type: string
                  forceDelete:
                    description: set to true to force delete the key
                    type: boolean
                  id:
                    type: string
                  instanceID:
                    description: Key protect or hpcs instance GUID
                    type: string
                  ivValue:
                    description: Only for imported root key
                    type: string
                  keyID:
                    description: Key ID
                    type: string
                  keyName:
                    description: Key name
                    type: string
                  keyRingID:
                    description: Key Ring for the Key
                    type: string
                  payload:
                    type: string
                  policies:
                    description: Creates or updates one or more policies for the specified
                      key
                    properties:
                      dualAuthDelete:
                        description: Data associated with the dual authorization delete
                          policy.
                        items:
                          properties:
                            ID:
                              description: The v4 UUID used to uniquely identify the
                                policy resource, as specified by RFC 4122.
                              type: string
                            createdBy:
                              description: The unique identifier for the resource
                                that created the policy.
                              type: string
                            creationDate:
                              description: The date the policy was created. The date
                                format follows RFC 3339.
                              type: string
                            crn:
                              description: Cloud Resource Name (CRN) that uniquely
                                identifies your cloud resources.
                              type: string
                            enabled:
                              description: If set to true, Key Protect enables a dual
                                authorization policy on a single key.
                              type: boolean
                            lastUpdateDate:
                              description: Updates when the policy is replaced or
                                modified. The date format follows RFC 3339.
                              type: string
                            updatedBy:
                              description: The unique identifier for the resource
                                that updated the policy.
                              type: string
                          required:
                          - enabled
                          type: object
                        type: array
                      rotation:
                        description: Specifies the key rotation time interval in months,
                          with a minimum of 1, and a maximum of 12
                        items:
                          properties:
                            ID:
                              description: The v4 UUID used to uniquely identify the
                                policy resource, as specified by RFC 4122.
                              type: string
                            createdBy:
                              description: The unique identifier for the resource
                                that created the policy.
                              type: string
                            creationDate:
                              description: The date the policy was created. The date
                                format follows RFC 3339.
                              type: string
                            crn:
                              description: Cloud Resource Name (CRN) that uniquely
                                identifies your cloud resources.
                              type: string
                            intervalMonth:
                              description: Specifies the key rotation time interval
                                in months
                              format: int64
                              type: integer
                            lastUpdateDate:
                              description: Updates when the policy is replaced or
                                modified. The date format follows RFC 3339.
                              type: string
                            updatedBy:
                              description: The unique identifier for the resource
                                that updated the policy.
                              type: string
                          required:
                          - intervalMonth
                          type: object
                        type: array
                    type: object
                  resourceControllerURL:
                    description: The URL of the IBM Cloud dashboard that can be used
                      to explore and view details about the resource
                    type: string
                  resourceCrn:
                    description: The crn of the resource
                    type: string
                  resourceGroupName:
                    description: The resource group name in which resource is provisioned
                    type: string
                  resourceName:
                    description: The name of the resource
                    type: string
                  resourceStatus:
                    description: The status of the resource
                    type: string
                  standardKey:
                    description: Standard key type
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: type of service hs-crypto or kms
                    type: string
                required:
                - instanceID
                - keyName
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
